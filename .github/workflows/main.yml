name: CI-CD
on: # Evento que vai disparar o workflow
  push: # Quando der push no repositório
    branches: ["main"] # Branches que vão disparar o workflow
  workflow_dispatch: # Quando clicar no botão de Run workflow

jobs:
  CI:
    runs-on: ubuntu-latest # Sistema operacional que vai rodar o job
    steps: # Passos que o job vai executar
      - uses: actions/checkout@v3 # Ação que vai fazer o checkout do repositório
      - name: Autenticando no Docker Registry # Nome do passo
        uses: docker/login-action@v2.2.0 # Ação que vai fazer o login no Docker Registry
        with: # Variáveis de ambiente
          username: ${{ secrets.DOCKERHUB_USR }} # Variável de ambiente que vai armazenar o usuário do Docker Registry
          password: ${{ secrets.DOCKERHUB_PWD }} # Variável de ambiente que vai armazenar a senha do Docker Registry
      - name: Docker build chatservice # Nome do passo
        uses: docker/build-push-action@v4.1.1 # Ação que vai fazer o build e push da imagem
        with: # Variáveis de ambiente
          context: ./chatservice # Diretório onde está o Dockerfile
          file: ./chatservice/Dockerfile # Caminho do Dockerfile
          push: true # Fazer push da imagem
          tags: | # Tags da imagem
            klysman08/imersao-chatservice:v${{ github.run_number }} 
            klysman08/imersao-chatservice:latest
      - name: Docker build webapp # Nome do passo
        uses: docker/build-push-action@v4.1.1 # Ação que vai fazer o build e push da imagem
        with:  # Variáveis de ambiente
          context: ./webapp # Diretório onde está o Dockerfile
          file: ./webapp/Dockerfile # Caminho do Dockerfile
          push: true # Fazer push da imagem
          tags: |
            klysman08/imersao-gpt-webapp:v${{ github.run_number }}
            klysman08/imersao-gpt-webapp:latest
  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
      - uses: actions/checkout@v3
      
      - name: Autenticar o AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Configuração do OpenAI API Token
        shell: bash
        run: |
          sed -i "s/{{API_TOKEN}}/${{ secrets.OPENAI_API_KEY }}/g" ./k8s/deploy-chatservice.yaml
      
      - name: Configuração do Kubectl
        shell: bash
        run: |
          aws eks update-kubeconfig --name aws-kubernetes-eks --region us-east-1
        
      - name: Deploy das aplicações
        uses: Azure/k8s-deploy@v4.9
        with:
          manifests: |
            k8s/deploy-chatservice.yaml
            k8s/deploy-webapp.yaml
          images: |
            klysman08/imersao-chatservice:v${{ github.run_number }}
            klysman08/imersao-gpt-webapp:v${{ github.run_number }}